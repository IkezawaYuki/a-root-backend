basePath: /v1
definitions:
  req.EmailBody:
    properties:
      email:
        example: yuki@gmail.com
        type: string
    type: object
  req.RegisterCustomer:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      wordpress_url:
        type: string
    type: object
  req.Token:
    properties:
      token:
        type: string
    type: object
  req.User:
    properties:
      email:
        example: test@test.com
        type: string
      password:
        example: "123456"
        type: string
    type: object
  res.Admin:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
  res.Admins:
    properties:
      admins:
        items:
          $ref: '#/definitions/res.Admin'
        type: array
      count:
        type: integer
      total:
        type: integer
    required:
    - count
    - total
    type: object
  res.Auth:
    properties:
      token:
        type: string
      user_id:
        type: integer
    type: object
  res.Customer:
    properties:
      created_at:
        type: string
      delete_hash_flag:
        type: boolean
      email:
        type: string
      facebook_token:
        type: string
      id:
        type: integer
      instagram_account_id:
        type: string
      instagram_account_name:
        type: string
      name:
        type: string
      start_date:
        type: string
      updated_at:
        type: string
      wordpress_url:
        type: string
    type: object
  res.Customers:
    properties:
      count:
        type: integer
      customers:
        items:
          $ref: '#/definitions/res.Customer'
        type: array
      total:
        type: integer
    required:
    - count
    - total
    type: object
  res.Message:
    properties:
      message:
        type: string
    type: object
info:
  contact:
    url: https://github.com/IkezawaYuki/a-root-backend
  description: a-root-backend
  title: a-root-backend
  version: 1.0.0
paths:
  /admin/admins:
    get:
      consumes:
      - application/json
      parameters:
      - description: メールアドレス
        in: query
        name: email
        type: string
      - description: 名前（部分一致）
        in: query
        name: partialName
        type: string
      - description: 取得件数
        in: query
        name: limit
        type: integer
      - description: 取得位置
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Admins'
      summary: 管理者ユーザー一覧を取得する
      tags:
      - admin
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/res.Admin'
      summary: 管理者ユーザーを作成する
      tags:
      - admin
  /admin/admins/{admin_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 管理者ID
        in: path
        name: admin_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/res.Message'
      summary: 管理者ユーザーを削除する
      tags:
      - admin
    get:
      consumes:
      - application/json
      parameters:
      - description: 管理者ID
        in: path
        name: admin_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Admins'
      summary: 管理者ユーザーを取得する
      tags:
      - admin
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/res.Admin'
      summary: 管理者ユーザーを更新する
      tags:
      - admin
  /admin/customers:
    get:
      consumes:
      - application/json
      parameters:
      - description: メールアドレス
        in: query
        name: email
        type: string
      - description: 名前（部分一致）
        in: query
        name: partialName
        type: string
      - description: フェイスブック連携
        in: query
        name: IsFacebookToken
        type: boolean
      - description: 取得件数
        in: query
        name: limit
        type: integer
      - description: 取得位置
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Customers'
      summary: 顧客一覧を取得する
      tags:
      - admin
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Customer'
      summary: 顧客情報を登録する
      tags:
      - admin
  /admin/customers/{customer_id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Customer'
      summary: 顧客情報を削除する
      tags:
      - admin
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Customer'
      summary: 顧客情報を取得する
      tags:
      - admin
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Customer'
      summary: 顧客情報を更新する
      tags:
      - admin
  /batch/refresh:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Message'
      summary: トークンを更新する
      tags:
      - customer
  /batch/sync:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Message'
      summary: '[Instagram=>WordPress]連携を実行する'
      tags:
      - customer
  /customer/check_token:
    post:
      consumes:
      - application/json
      parameters:
      - description: トークン
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/req.Token'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/res.Customer'
      summary: トークンの検証
      tags:
      - admin
  /customer/instagram:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Customer'
      summary: インスタグラム上の投稿データを取得する
      tags:
      - customer
  /customer/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: ログイン情報
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/req.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Auth'
      summary: ログインする
      tags:
      - customer
  /customer/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Customer'
      summary: 自分の情報を取得する
      tags:
      - customer
  /customer/posts:
    get:
      consumes:
      - application/json
      parameters:
      - description: 取得件数
        in: query
        name: limit
        type: integer
      - description: 取得位置
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Customer'
      summary: 連携済みの投稿データを取得する
      tags:
      - customer
  /customer/register/:
    post:
      consumes:
      - application/json
      parameters:
      - description: メールアドレス
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/req.RegisterCustomer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/res.Message'
      summary: ユーザーを登録する
      tags:
      - admin
  /customer/sync:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Message'
      summary: インスタグラム上の投稿データをWordpressに連携する
      tags:
      - customer
  /customer/temp_register:
    post:
      consumes:
      - application/json
      parameters:
      - description: メールアドレス
        in: body
        name: default
        required: true
        schema:
          $ref: '#/definitions/req.EmailBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/res.Message'
      summary: ユーザーを登録する
      tags:
      - admin
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
