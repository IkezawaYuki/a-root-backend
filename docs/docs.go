// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "url": "https://github.com/IkezawaYuki/a-root-backend"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/admins": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "管理者ユーザー一覧を取得する",
                "parameters": [
                    {
                        "type": "string",
                        "description": "メールアドレス",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "名前（部分一致）",
                        "name": "partialName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "取得件数",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "取得位置",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.Admins"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "管理者ユーザーを作成する",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/res.Admin"
                        }
                    }
                }
            }
        },
        "/admin/customers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "顧客一覧を取得する",
                "parameters": [
                    {
                        "type": "string",
                        "description": "メールアドレス",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "名前（部分一致）",
                        "name": "partialName",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "フェイスブック連携",
                        "name": "IsFacebookToken",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "取得件数",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "取得位置",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.Customers"
                        }
                    }
                }
            }
        },
        "/admin/customers/{customer_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "顧客情報を取得する",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.Customer"
                        }
                    }
                }
            }
        },
        "/admin/{admin_id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "管理者ユーザーを更新する",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/res.Admin"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "管理者ユーザーを削除する",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/res.Message"
                        }
                    }
                }
            }
        },
        "/customer/fetch_posts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "インスタグラム上の投稿データをWordpressに連携する",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.Message"
                        }
                    }
                }
            }
        },
        "/customer/instagram/posts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "インスタグラム上の投稿データを取得する",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.Customer"
                        }
                    }
                }
            }
        },
        "/customer/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "ログインする",
                "parameters": [
                    {
                        "description": "ログイン情報",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.Auth"
                        }
                    }
                }
            }
        },
        "/customer/me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "自分の情報を取得する",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.Customer"
                        }
                    }
                }
            }
        },
        "/customer/posts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "連携済みの投稿データを取得する",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "取得件数",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "取得位置",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.Customer"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "req.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "res.Admin": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "res.Admins": {
            "type": "object",
            "required": [
                "count",
                "total"
            ],
            "properties": {
                "admins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/res.Admin"
                    }
                },
                "count": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "res.Auth": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "res.Customer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "delete_hash_flag": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "facebook_token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instagram_account_id": {
                    "type": "string"
                },
                "instagram_account_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "wordpress_url": {
                    "type": "string"
                }
            }
        },
        "res.Customers": {
            "type": "object",
            "required": [
                "count",
                "total"
            ],
            "properties": {
                "count": {
                    "type": "integer"
                },
                "customers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/res.Customer"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "res.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "a-root-backend",
	Description:      "a-root-backend",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
